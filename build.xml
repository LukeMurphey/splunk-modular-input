<project default="package" name="modular_input">
	<import file="basebuild.xml"/>

    <!-- ================================= 
          target: populate_export_dir
         ================================= -->
    <target name="populate_export_dir" depends="initialize,get_build_number">
    	
        <!-- Copy the files over that need substitution. -->
        <copy todir="${export_dir}/${ant.project.name}">
            <fileset dir="${value.src.directory}">
                <include name="__init__.py" />
            </fileset>
            
            <!-- Perform the substitution of the build information -->
            <filterset begintoken="${" endtoken="}"> 
                <filter token="build.number" value="${value.build.number}" />
            	<filter token="build.date" value="${value.build.date}" />
            	<filter token="version.number" value="${value.version.number}" />
            </filterset>
        </copy>

         <!-- Copy the rest of the files. -->
         <copy todir="${export_dir}/${ant.project.name}">
            <fileset dir="${value.src.directory}">
                <include name="**/**.py" />
				<exclude name="__init__.py" />
            </fileset>
        </copy>
	</target>

    <!-- ================================= 
          target: package
         ================================= -->
    <target name="package" description="Create the " depends="populate_export_dir">

		<!-- Make the directory where we will store the files -->
        <mkdir dir="${value.build.packageoutput.directory}" />

 		<!-- Resolve the absolute filename -->
		<property name="absolute_package_file" location="${value.build.packageoutput.directory}/${value.build.package.file}"/>

        <!-- Delete the existing file -->
        <delete file="${value.build.packageoutput.directory}/${value.build.package.file}" />

 		<!-- Zip up the file -->
		<zip destfile="${value.build.packageoutput.directory}/${value.build.package.file}">
			<fileset dir="${export_dir}" />
		</zip>

        <!-- Delete the temporary location so that old files do not get streamed in -->
        <delete dir="${export_dir}" />
        <echo>Modular input build ${value.build.number} created: ${value.build.package.file}</echo>
    </target>

    <!-- ================================= 
          target: test_with_system_python
         ================================= -->
    <target name="test_with_system_python" description="Run unit tests using system's Python" depends="initialize,package">

		<!-- Define a default value for the tests to run. Otherwise, arguments passed from the CLI will be used (e.g. ant test.run_unit -Dtest=TestPingParser) -->
		<property name="test" value="" />

        <exec failonerror="true" executable="python" dir="${value.build.test.directory}">
        	<arg line="unit.py" />
			<arg line="${test}" />
        </exec>
    </target>

    <target name="test.setup" depends="test_with_system_python">
    </target>
</project>